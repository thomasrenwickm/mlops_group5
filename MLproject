# MLproject  (root of repo)
name: mlops_group5_project
conda_env: conda.yml           # Re-creates the same env you already use

# ─────────────────────────────────────────────────────────────
#  Entry-points
#  - `main`            : Everyday runs—takes only the `steps` list.
#  - `main_with_override` (optional): Use when you really need
#      to inject extra Hydra overrides from the CLI or CI.
# ─────────────────────────────────────────────────────────────
entry_points:

  main:
    parameters:
      steps:
        type: str
        default: all
        description: >-
          Comma-separated list of pipeline steps
          (e.g., "data_load,data_validation")
    command: >
      python main.py main.steps={steps}
      

  # Optional second entry-point ─ only call this when you have
  # a non-empty hydra_options string; otherwise keep using `main`.
  #main_with_override:
  #  parameters:
  #    steps:
  #      type: str
  #      default: all
  #    hydra_options:
  #      type: str
  #      default: ""
  #      description: Extra overrides in standard Hydra syntax
  #  command: >
  #    python main.py main.steps={steps} {hydra_options}

